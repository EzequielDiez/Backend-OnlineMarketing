openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0
  description: API for managing products

paths:
  /api/products:
    get:
      summary: Get all products
      tags:
        - Products
      parameters:
        - name: limit
          in: query
          description: Number of products per page (default:10)
          schema:
            type: integer
            minimum: 1
        - name: page
          in: query
          description: Page number (default:1)
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  totalProducts:
                    type: integer
                  currentPage:
                    type: integer
                  totalPages:
                    type: integer

    post:
      summary: Create a new product
      tags:
        - Products
      security:
        - BearerAuth: []
      requestBody:
        description: Product data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '201':
          description: Created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized

  /api/products/{pid}:
    get:
      summary: Get a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

    put:
      summary: Update a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      requestBody:
        description: Product data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInput'
      responses:
        '200':
          description: Updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '401':
          description: Unauthorized
        '404':
          description: Product not found

    delete:
      summary: Delete a product by ID
      tags:
        - Products
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  message:
                    type: string
        '401':
          description: Unauthorized
        '404':
          description: Product not found

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        code:
          type: string
        price:
          type: number
        status:
          type: boolean
        stock:
          type: integer
        category:
          type: string
        thumbnails:
          type: array
          items:
            type: string
      example:
        id: 60f12ef7f9abf7a59c3992cd
        title: Sample Product
        description: This is a sample product.
        code: PRD001
        price: 19.99
        status: true
        stock: 100
        category: Electronics
        thumbnails:
          - "/images/thumbnail1.jpg"
          - "/images/thumbnail2.jpg"

    ProductInput:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        code:
          type: string
        price:
          type: number
        status:
          type: boolean
        stock:
          type: integer
        category:
          type: string
        thumbnails:
          type: array
          items:
            type: string
      example:
        title: Sample Product
        description: This is a sample product.
        code: PRD001
        price: 19.99
        status: true
        stock: 100
        category: Electronics
        thumbnails:
          - "/images/thumbnail1.jpg"
          - "/images/thumbnail2.jpg"
